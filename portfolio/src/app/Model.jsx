/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef,useEffect,useState } from 'react'
import { useGLTF } from '@react-three/drei'


export default function Model({ viseme }) {
  const group = useRef();
  
const { nodes, materials } = useGLTF('/male.glb')


  useEffect(() => {
    if (!viseme) return;

    const visemeMeshes = [
      nodes?.Wolf3D_Head,
      nodes?.Wolf3D_Teeth,
      nodes?.EyeLeft,
      nodes?.EyeRight,
    ];

    visemeMeshes.forEach((mesh) => {
      if (!mesh?.morphTargetDictionary || !mesh?.morphTargetInfluences) return;

      const dict = mesh.morphTargetDictionary;
      const influences = mesh.morphTargetInfluences;

      for (let i = 0; i < influences.length; i++) {
        influences[i] = 0;
      }

      const visemeKey = `${viseme}`;
      const index = dict[visemeKey];
      if (index !== undefined) {
        influences[index] = 1;
        console.log(`Applied viseme: ${visemeKey}`);
      } else {
        console.warn(`Viseme not found: ${visemeKey}`);
      }
    });
  }, [viseme, nodes]);


useEffect(() => {
  const head = nodes?.Wolf3D_Head;
  if (!head?.morphTargetDictionary) return;

  const visemes = Object.keys(head.morphTargetDictionary).filter(key =>
    key.startsWith('viseme_')
  );

  console.log("Available viseme keys:", visemes);
}, [nodes]);


  
  return (
    <group dispose={null} position={[0,0.3,3.5]}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeLeft.skeleton}
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
      />
      <skinnedMesh
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeRight.skeleton}
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        skeleton={nodes.Wolf3D_Head.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={nodes.Wolf3D_Teeth.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Hair.geometry}
        material={materials.Wolf3D_Hair}
        skeleton={nodes.Wolf3D_Hair.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        skeleton={nodes.Wolf3D_Body.skeleton}
      />
    </group>
  )
}

useGLTF.preload('/male.glb')


